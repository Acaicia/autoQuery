prereqs -
    gin : go get github.com/gin-gonic/gin

next steps - 
    - import bootstrap

    - begin design work on the front end

    - add query advanced search
        - query parameters: 
            - query string, text input  
            - exact title, text input
            - platform, dropdown menu (reddit, twitch, youtube options)
            - min-max like count, min integer field, max integer field, slider
            - min-max view count, min integer field, max integer field, slider
            - min-max comment count, min integer field, max integer field, slider
            - min-max upload date, min integer field, max integer field, slider
        If the min value is left empty, default to no min
        If the max value is left empty, default to no max

    - add tabulator that displays 50 video results per page
    - add buttons to each video result:
        - Download 
        - Go to video link 
        - Copy video link 
    
    - add the ability to send query POST requests to the backend and receive a response, then update the webpage

    - add a sidebar menu that shows search and favorites buttons that go to /search and /favorites

    - add the ability to save favorites to your list 

    - add the ability to print out your favorites list to a text file 

    - add twitter search using non api methods 

    - add query multithreading using github.com/gammazero/workerpool



Layout:
.
├── api
│	└── reddit.go
│	└── twitch.go 
│	└── youtube.go
├── api
│	└── controller.go
│	└── index.tmpl
├── common
│	└── common.go
├── credentials
│	└── credentials.go
│	└── credentials.json
├── data
├── go.mod
├── go.sum
├── main.go


NEXT PROMPT:

I fixed the problem, here's the new controller.go code:

package app

import (
	"net/http"
	"path/filepath"
	"html/template"
	"fmt"
	"github.com/gin-gonic/gin"
	"autoQuery/common"
	cred "autoQuery/credentials"
	api "autoQuery/api"
)

type searchParams struct {
	Query string `form:"query" json:"query" binding:"required"`
}

func ServeWeb(credentials cred.Credentials) {
    router := gin.Default()

    tmpl := template.Must(template.ParseGlob(filepath.Join("app", "index.tmpl")))
    router.SetHTMLTemplate(tmpl)

    router.GET("/", func(c *gin.Context) {
        c.HTML(http.StatusOK, "index.tmpl", nil)
    })

    router.POST("/search", func(c *gin.Context) {
        var searchParams searchParams
        err := c.BindJSON(&searchParams)
        if err != nil {
            c.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
            return
        }
    
        query := searchParams.Query
        fmt.Println("Received search query:", query)
    
        results := search(query, credentials)
    
        fmt.Println("Search results count:", len(results))
        for _, result := range results {
            fmt.Printf("Result: %+v\n", result)
        }
    
        c.JSON(http.StatusOK, results)
    })

    router.Run(":8080")
}

func search(query string, credentials cred.Credentials) (results []common.SearchResult) { 
	redditResults, err := api.SearchReddit(query, credentials)
	if err == nil {
		results = append(results, redditResults...)
	}
	results = append(results, api.SearchYouTube(query, credentials.YouTubeAPIKey)...)
	results = append(results, api.SearchTwitch(query, credentials)...)
	return
}

I also fixed the index.tmpl file. Here is the new code for that file:
<!DOCTYPE html>
    <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>AutoQuery</title>
            
            <!-- Bootstrap CSS --> <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
            <!-- Vue.js --> <script src="https://cdn.jsdelivr.net/npm/vue@2.6.12/dist/vue.js"></script>
            <!-- jQuery --> <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
            <!-- Bootstrap JS --> <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>
        </head>
        <body>


    <!-- THIS IS THE TOP OF THE PAGE SPECIFIC HTML/JS-->

        <div id="app">
            <form id="searchForm">
            <input type="text" id="query" placeholder="Search for videos...">
            <button type="submit">Search</button>
            </form>
            <table class="table">
            <thead>
                <tr>
                <th scope="col">Platform</th>
                <th scope="col">Title</th>
                <th scope="col">Thumbnail</th>
                <th scope="col">View Count</th>
                <th scope="col">Like Count</th>
                <th scope="col">Comment Count</th>
                <th scope="col">Upload Date</th>
                <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody id="results">
                <tr v-for="result in results">
                    <td v-text="result.platform"></td>
                    <td v-text="result.title"></td>
                    <td><img :src="result.thumbnail_url" width="100"></td>
                    <td v-text="result.views"></td>
                    <td v-text="result.likes"></td>
                    <td v-text="result.comments"></td>
                    <td v-text="result.upload_date"></td>
                    <td><a :href="result.url" target="_blank">Open</a></td>
                </tr>
            </tbody>    
            </table>
        </div>

        <script>

        /* THIS IS THE TOP OF THE JAVASCRIPT */
        $(document).ready(function () {
            const app = new Vue({
                el: '#app',
                data: {
                    results: []
                }
            });
            $('#searchForm').on('submit', function (event) {
                event.preventDefault();
                let query = $('#query').val();

                console.log("Submitting search query:", query);

                $.ajax({
                    url: '/search',
                    type: 'POST',
                    dataType: 'json',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        query: query
                    }),
                    success: function (data) {
                        console.log("Search results:", data);
                        app.results = data;

                    },
                    error: function (error) {
                        console.error("Error:", error);
                    }
                });
            });
            
        });

        </script>
    <!-- THIS IS THE BOTTOM OF THE PAGE SPECIFIC HTML/JS-->

    </body>
</html>

Now the youtube result rows are added properly, but the reddit results have no data except for the title. 